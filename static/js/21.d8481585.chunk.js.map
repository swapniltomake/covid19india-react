{"version":3,"sources":["../node_modules/react-use/esm/useLocalStorage.js","components/loaders/Timeseries.js","components/TimeseriesExplorer.js","../../src/shared/uid.ts","../../src/web/Svg.tsx","../../src/web/ContentLoader.tsx","../../src/web/presets/FacebookStyle.tsx"],"names":["noop","useLocalStorage","key","initialValue","options","isClient","Error","deserializer","raw","value","JSON","parse","_a","useState","serializer","String","stringify","localStorageValue","localStorage","getItem","setItem","state","setState","set","useCallback","valOrFunc","newState","remove","removeItem","undefined","TimeseriesLoader","windowWidth","window","innerWidth","width","viewBox","height","speed","cx","cy","r","Timeseries","lazy","React","memo","stateCode","timeseries","timelineDate","date","regionHighlighted","setRegionHighlighted","anchor","setAnchor","expandTable","t","useTranslation","useSessionStorage","TIMESERIES_LOOKBACKS","MONTH","lookback","setLookback","chartType","setChartType","isUniform","setIsUniform","isLog","setIsLog","explorerElement","useRef","isVisible","useIsVisible","once","selectedRegion","useMemo","districts","districtName","selectedTimeseries","dates","regions","states","Object","keys","filter","code","sort","code1","code2","STATE_NAMES","localeCompare","map","reduce","acc1","acc2","dropdownRegions","find","region","today","getIndiaYesterdayISO","pastDates","TWO_WEEKS","cutOffDate","formatISO","sub","parseIndiaDate","weeks","representation","months","handleChange","target","resetDropdown","className","classnames","stickied","expanded","style","display","ref","onClick","bind","this","entries","TIMESERIES_CHART_TYPES","index","ctype","htmlFor","id","type","checked","aria-label","onChange","disabled","fallback","values","option","selected","size","prevProps","currProps","forceRender","equal","SVG","animate","backgroundColor","backgroundOpacity","baseUrl","children","foregroundColor","foregroundOpacity","gradientRatio","uniqueKey","interval","rtl","title","fixedId","Math","random","toString","substring","idClip","idGradient","idAria","rtlStyle","transform","keyTimes","dur","React.createElement","role","props","x","y","clipPath","fill","offset","stopColor","stopOpacity","attributeName","repeatCount","defaultProps","ContentLoader","Svg","Facebook","ReactContentLoaderFacebook","rx"],"mappings":"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","file":"static/js/21.d8481585.chunk.js","sourcesContent":["/* eslint-disable */\nimport { useState, useCallback } from 'react';\nimport { isClient } from './util';\nvar noop = function () { };\nvar useLocalStorage = function (key, initialValue, options) {\n    if (!isClient) {\n        return [initialValue, noop, noop];\n    }\n    if (!key) {\n        throw new Error('useLocalStorage key may not be falsy');\n    }\n    var deserializer = options ? (options.raw ? function (value) { return value; } : options.deserializer) : JSON.parse;\n    var _a = useState(function () {\n        try {\n            var serializer = options ? (options.raw ? String : options.serializer) : JSON.stringify;\n            var localStorageValue = localStorage.getItem(key);\n            if (localStorageValue !== null) {\n                return deserializer(localStorageValue);\n            }\n            else {\n                initialValue && localStorage.setItem(key, serializer(initialValue));\n                return initialValue;\n            }\n        }\n        catch (_a) {\n            // If user is in private mode or has storage restriction\n            // localStorage can throw. JSON.parse and JSON.stringify\n            // can throw, too.\n            return initialValue;\n        }\n    }), state = _a[0], setState = _a[1];\n    var set = useCallback(function (valOrFunc) {\n        try {\n            var newState = typeof valOrFunc === 'function' ? valOrFunc(state) : valOrFunc;\n            if (typeof newState === 'undefined')\n                return;\n            var value = void 0;\n            if (options)\n                if (options.raw)\n                    if (typeof newState === 'string')\n                        value = newState;\n                    else\n                        value = JSON.stringify(newState);\n                else if (options.serializer)\n                    value = options.serializer(newState);\n                else\n                    value = JSON.stringify(newState);\n            else\n                value = JSON.stringify(newState);\n            localStorage.setItem(key, value);\n            setState(deserializer(value));\n        }\n        catch (_a) {\n            // If user is in private mode or has storage restriction\n            // localStorage can throw. Also JSON.stringify can throw.\n        }\n    }, [key, setState]);\n    var remove = useCallback(function () {\n        try {\n            localStorage.removeItem(key);\n            setState(undefined);\n        }\n        catch (_a) {\n            // If user is in private mode or has storage restriction\n            // localStorage can throw.\n        }\n    }, [key, setState]);\n    return [state, set, remove];\n};\nexport default useLocalStorage;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst TimeseriesLoader = () => {\n  const windowWidth = window.innerWidth;\n  const width = windowWidth > 769 ? 480 : windowWidth;\n  const height = 160 * 5;\n\n  return (\n    <ContentLoader\n      viewBox={`0 0 ${width} ${height}`}\n      height={height}\n      width={width}\n      speed={2}\n    >\n      <circle cx={0.4 * width} cy={height / 2} r=\"5\" />\n      <circle cx={0.5 * width} cy={height / 2} r=\"5\" />\n      <circle cx={0.6 * width} cy={height / 2} r=\"5\" />\n    </ContentLoader>\n  );\n};\n\nexport default TimeseriesLoader;\n","import TimeseriesLoader from './loaders/Timeseries';\n\nimport {\n  TIMESERIES_CHART_TYPES,\n  TIMESERIES_LOOKBACKS,\n  STATE_NAMES,\n} from '../constants';\nimport useIsVisible from '../hooks/useIsVisible';\nimport {getIndiaYesterdayISO, parseIndiaDate} from '../utils/commonFunctions';\n\nimport {IssueOpenedIcon, PinIcon, ReplyIcon} from '@primer/octicons-v2-react';\nimport classnames from 'classnames';\nimport {formatISO, sub} from 'date-fns';\nimport equal from 'fast-deep-equal';\nimport React, {useCallback, useMemo, useRef, lazy, Suspense} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useLocalStorage, useSessionStorage} from 'react-use';\n\nconst Timeseries = lazy(() => import('./Timeseries'));\n\nfunction TimeseriesExplorer({\n  stateCode,\n  timeseries,\n  date: timelineDate,\n  regionHighlighted,\n  setRegionHighlighted,\n  anchor,\n  setAnchor,\n  expandTable,\n}) {\n  const {t} = useTranslation();\n  const [lookback, setLookback] = useSessionStorage(\n    'timeseriesLookback',\n    TIMESERIES_LOOKBACKS.MONTH\n  );\n  const [chartType, setChartType] = useLocalStorage('chartType', 'total');\n  const [isUniform, setIsUniform] = useLocalStorage('isUniform', true);\n  const [isLog, setIsLog] = useLocalStorage('isLog', false);\n  const explorerElement = useRef();\n  const isVisible = useIsVisible(explorerElement, {once: true});\n\n  const selectedRegion = useMemo(() => {\n    if (timeseries?.[regionHighlighted.stateCode]?.districts) {\n      return {\n        stateCode: regionHighlighted.stateCode,\n        districtName: regionHighlighted.districtName,\n      };\n    } else {\n      return {\n        stateCode: regionHighlighted.stateCode,\n        districtName: null,\n      };\n    }\n  }, [timeseries, regionHighlighted.stateCode, regionHighlighted.districtName]);\n\n  const selectedTimeseries = useMemo(() => {\n    if (selectedRegion.districtName) {\n      return timeseries?.[selectedRegion.stateCode]?.districts?.[\n        selectedRegion.districtName\n      ]?.dates;\n    } else {\n      return timeseries?.[selectedRegion.stateCode]?.dates;\n    }\n  }, [timeseries, selectedRegion.stateCode, selectedRegion.districtName]);\n\n  const regions = useMemo(() => {\n    const states = Object.keys(timeseries || {})\n      .filter((code) => code !== stateCode)\n      .sort((code1, code2) =>\n        STATE_NAMES[code1].localeCompare(STATE_NAMES[code2])\n      )\n      .map((code) => {\n        return {\n          stateCode: code,\n          districtName: null,\n        };\n      });\n    const districts = Object.keys(timeseries || {}).reduce((acc1, code) => {\n      return [\n        ...acc1,\n        ...Object.keys(timeseries?.[code]?.districts || {}).reduce(\n          (acc2, districtName) => {\n            return [\n              ...acc2,\n              {\n                stateCode: code,\n                districtName: districtName,\n              },\n            ];\n          },\n          []\n        ),\n      ];\n    }, []);\n\n    return [\n      {\n        stateCode: stateCode,\n        districtName: null,\n      },\n      ...states,\n      ...districts,\n    ];\n  }, [timeseries, stateCode]);\n\n  const dropdownRegions = useMemo(() => {\n    if (\n      regions.find(\n        (region) =>\n          region.stateCode === regionHighlighted.stateCode &&\n          region.districtName === regionHighlighted.districtName\n      )\n    )\n      return regions;\n    return [\n      ...regions,\n      {\n        stateCode: regionHighlighted.stateCode,\n        districtName: regionHighlighted.districtName,\n      },\n    ];\n  }, [regionHighlighted.stateCode, regionHighlighted.districtName, regions]);\n\n  const dates = useMemo(() => {\n    const today = timelineDate || getIndiaYesterdayISO();\n    const pastDates = Object.keys(selectedTimeseries || {}).filter(\n      (date) => date <= today\n    );\n\n    if (lookback === TIMESERIES_LOOKBACKS.TWO_WEEKS) {\n      const cutOffDate = formatISO(sub(parseIndiaDate(today), {weeks: 2}), {\n        representation: 'date',\n      });\n      return pastDates.filter((date) => date >= cutOffDate);\n    } else if (lookback === TIMESERIES_LOOKBACKS.MONTH) {\n      const cutOffDate = formatISO(sub(parseIndiaDate(today), {months: 1}), {\n        representation: 'date',\n      });\n      return pastDates.filter((date) => date >= cutOffDate);\n    }\n    return pastDates;\n  }, [selectedTimeseries, timelineDate, lookback]);\n\n  const handleChange = useCallback(\n    ({target}) => {\n      setRegionHighlighted(JSON.parse(target.value));\n    },\n    [setRegionHighlighted]\n  );\n\n  const resetDropdown = useCallback(() => {\n    setRegionHighlighted({\n      stateCode: stateCode,\n      districtName: null,\n    });\n  }, [stateCode, setRegionHighlighted]);\n\n  return (\n    <div\n      className={classnames(\n        'TimeseriesExplorer fadeInUp',\n        {\n          stickied: anchor === 'timeseries',\n        },\n        {expanded: expandTable}\n      )}\n      style={{display: anchor === 'mapexplorer' ? 'none' : ''}}\n      ref={explorerElement}\n    >\n      <div className=\"timeseries-header\">\n        <div\n          className={classnames('anchor', {\n            stickied: anchor === 'timeseries',\n          })}\n          onClick={\n            setAnchor &&\n            setAnchor.bind(this, anchor === 'timeseries' ? null : 'timeseries')\n          }\n        >\n          <PinIcon />\n        </div>\n\n        <h1>{t('Spread Trends')}</h1>\n        <div className=\"tabs\">\n          {Object.entries(TIMESERIES_CHART_TYPES).map(\n            ([ctype, value], index) => (\n              <div\n                className={`tab ${chartType === ctype ? 'focused' : ''}`}\n                key={ctype}\n                onClick={setChartType.bind(this, ctype)}\n              >\n                <h4>{t(value)}</h4>\n              </div>\n            )\n          )}\n        </div>\n\n        <div className=\"scale-modes\">\n          <label className=\"main\">{t('Scale Modes')}</label>\n          <div className=\"timeseries-mode\">\n            <label htmlFor=\"timeseries-mode\">{t('Uniform')}</label>\n            <input\n              id=\"timeseries-mode\"\n              type=\"checkbox\"\n              className=\"switch\"\n              checked={isUniform}\n              aria-label={t('Checked by default to scale uniformly.')}\n              onChange={setIsUniform.bind(this, !isUniform)}\n            />\n          </div>\n          <div\n            className={`timeseries-logmode ${\n              chartType !== 'total' ? 'disabled' : ''\n            }`}\n          >\n            <label htmlFor=\"timeseries-logmode\">{t('Logarithmic')}</label>\n            <input\n              id=\"timeseries-logmode\"\n              type=\"checkbox\"\n              checked={chartType === 'total' && isLog}\n              className=\"switch\"\n              disabled={chartType !== 'total'}\n              onChange={setIsLog.bind(this, !isLog)}\n            />\n          </div>\n        </div>\n      </div>\n\n      {dropdownRegions && (\n        <div className=\"state-selection\">\n          <div className=\"dropdown\">\n            <select\n              value={JSON.stringify(selectedRegion)}\n              onChange={handleChange}\n            >\n              {dropdownRegions\n                .filter(\n                  (region) =>\n                    STATE_NAMES[region.stateCode] !== region.districtName\n                )\n                .map((region) => {\n                  return (\n                    <option\n                      value={JSON.stringify(region)}\n                      key={`${region.stateCode}-${region.districtName}`}\n                    >\n                      {region.districtName\n                        ? t(region.districtName)\n                        : t(STATE_NAMES[region.stateCode])}\n                    </option>\n                  );\n                })}\n            </select>\n          </div>\n          <div className=\"reset-icon\" onClick={resetDropdown}>\n            <ReplyIcon />\n          </div>\n        </div>\n      )}\n\n      {isVisible && (\n        <Suspense fallback={<TimeseriesLoader />}>\n          <Timeseries\n            timeseries={selectedTimeseries}\n            regionHighlighted={selectedRegion}\n            {...{dates, chartType, isUniform, isLog}}\n          />\n        </Suspense>\n      )}\n\n      {!isVisible && <div style={{height: '50rem'}} />}\n\n      <div className=\"pills\">\n        {Object.values(TIMESERIES_LOOKBACKS).map((option) => (\n          <button\n            key={option}\n            type=\"button\"\n            className={classnames({selected: lookback === option})}\n            onClick={() => setLookback(option)}\n          >\n            {t(option)}\n          </button>\n        ))}\n      </div>\n\n      <div className=\"alert\">\n        <IssueOpenedIcon size={24} />\n        <div className=\"alert-right\">\n          {t('Tested chart is independent of uniform scaling')}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (currProps.forceRender) {\n    return false;\n  } else if (!currProps.timeseries && prevProps.timeseries) {\n    return true;\n  } else if (currProps.timeseries && !prevProps.timeseries) {\n    return false;\n  } else if (\n    !equal(\n      currProps.regionHighlighted.stateCode,\n      prevProps.regionHighlighted.stateCode\n    )\n  ) {\n    return false;\n  } else if (\n    !equal(\n      currProps.regionHighlighted.districtName,\n      prevProps.regionHighlighted.districtName\n    )\n  ) {\n    return false;\n  } else if (!equal(currProps.date, prevProps.date)) {\n    return false;\n  } else if (!equal(currProps.anchor, prevProps.anchor)) {\n    return false;\n  } else if (!equal(currProps.expandTable, prevProps.expandTable)) {\n    return false;\n  }\n  return true;\n};\n\nexport default React.memo(TimeseriesExplorer, isEqual);\n","export default (): string =>\n  Math.random()\n    .toString(36)\n    .substring(6)\n","import * as React from 'react'\n\nimport uid from '../shared/uid'\nimport { IContentLoaderProps } from './'\n\nconst SVG: React.FC<IContentLoaderProps> = ({\n  animate,\n  backgroundColor,\n  backgroundOpacity,\n  baseUrl,\n  children,\n  foregroundColor,\n  foregroundOpacity,\n  gradientRatio,\n  uniqueKey,\n  interval,\n  rtl,\n  speed,\n  style,\n  title,\n  ...props\n}) => {\n  const fixedId = uniqueKey || uid()\n  const idClip = `${fixedId}-diff`\n  const idGradient = `${fixedId}-animated-diff`\n  const idAria = `${fixedId}-aria`\n\n  const rtlStyle = rtl ? { transform: 'scaleX(-1)' } : null\n  const keyTimes = `0; ${interval}; 1`\n  const dur = `${speed}s`\n\n  return (\n    <svg\n      aria-labelledby={idAria}\n      role=\"img\"\n      style={{ ...style, ...rtlStyle }}\n      {...props}\n    >\n      {title ? <title id={idAria}>{title}</title> : null}\n      <rect\n        role=\"presentation\"\n        x=\"0\"\n        y=\"0\"\n        width=\"100%\"\n        height=\"100%\"\n        clipPath={`url(${baseUrl}#${idClip})`}\n        style={{ fill: `url(${baseUrl}#${idGradient})` }}\n      />\n\n      <defs role=\"presentation\">\n        <clipPath id={idClip}>{children}</clipPath>\n\n        <linearGradient id={idGradient}>\n          <stop\n            offset=\"0%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio}; ${-gradientRatio}; 1`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"50%\"\n            stopColor={foregroundColor}\n            stopOpacity={foregroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio / 2}; ${-gradientRatio / 2}; ${1 +\n                  gradientRatio / 2}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"100%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`0; 0; ${1 + gradientRatio}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n              />\n            )}\n          </stop>\n        </linearGradient>\n      </defs>\n    </svg>\n  )\n}\n\nSVG.defaultProps = {\n  animate: true,\n  backgroundColor: '#f5f6f7',\n  backgroundOpacity: 1,\n  baseUrl: '',\n  foregroundColor: '#eee',\n  foregroundOpacity: 1,\n  gradientRatio: 2,\n  id: null,\n  interval: 0.25,\n  rtl: false,\n  speed: 1.2,\n  style: {},\n  title: 'Loading...',\n}\n\nexport default SVG\n","import * as React from 'react'\n\nimport { Facebook, IContentLoaderProps } from '.'\nimport Svg from './Svg'\n\nconst ContentLoader: React.FC<IContentLoaderProps> = props =>\n  props.children ? <Svg {...props} /> : <Facebook {...props} />\n\nexport default ContentLoader\n","import * as React from 'react'\n\nimport { IContentLoaderProps } from '..'\nimport ContentLoader from '../ContentLoader'\n\nconst ReactContentLoaderFacebook: React.FC<IContentLoaderProps> = props => (\n  <ContentLoader viewBox=\"0 0 476 124\" {...props}>\n    <rect x=\"48\" y=\"8\" width=\"88\" height=\"6\" rx=\"3\" />\n    <rect x=\"48\" y=\"26\" width=\"52\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"56\" width=\"410\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"72\" width=\"380\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"88\" width=\"178\" height=\"6\" rx=\"3\" />\n    <circle cx=\"20\" cy=\"20\" r=\"20\" />\n  </ContentLoader>\n)\n\nexport default ReactContentLoaderFacebook\n"],"sourceRoot":""}